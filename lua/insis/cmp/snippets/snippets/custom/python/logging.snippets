snippet glog_plus "glog plus" b
        import logging
        LOGGER = logging.getLogger(__name__)
        LOGGER.addHandler(logging.NullHandler())
        
snippet log_f "logger basic" b
        logging.basicConfig(level=logging.INFO,
        					format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
        					datefmt='%a, %d %b %Y %H:%M:%S',
        					${1:#  filename='myapp.log',}
        					${2:#  filemode='a',}
        					)
        
snippet log_c_f "logger with console handler and file handler" b
        logging.basicConfig(level=logging.DEBUG,
        					format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
        					datefmt='%a, %d %b %Y %H:%M:%S',
        					)
        
        file_handler = logging.FileHandler(${1:'myapp.log'}, mode=${2:'a'})
        file_handler.setLevel(logging.INFO)
        file_handler.setFormatter(logging.Formatter('%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'))
        LOGGER.addHandler(file_handler)
        
snippet log_f_c "logger with file handler and console handler" b
        logging.basicConfig(level=logging.DEBUG,
        					format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
        					datefmt='%a, %d %b %Y %H:%M:%S',
        					filename=${1:'myapp.log'},
        					filemode=${2:'a'},
        					)
        
        console_handler = logging.StreamHandler()
        console_handler.setLevel(logging.INFO)
        console_handler.setFormatter(logging.Formatter('%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'))
        LOGGER.addHandler(console_handler)
        
snippet log_c_r "logger with console handler and file handler" b
        import logging.handlers
        logging.basicConfig(level=logging.DEBUG,
        					format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
        					datefmt='%a, %d %b %Y %H:%M:%S',
        					)
        
        rotating_file_handler = logging.handlers.RotatingFileHandler(${1:'myapp.log'}, maxBytes=1024 * 1024, backupCount=1)
        rotating_file_handler.setLevel(logging.INFO)
        rotating_file_handler.setFormatter(logging.Formatter('%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'))
        LOGGER.addHandler(rotating_file_handler)
